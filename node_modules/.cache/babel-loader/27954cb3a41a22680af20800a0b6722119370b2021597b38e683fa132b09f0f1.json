{"ast":null,"code":"var _jsxFileName = \"M:\\\\DemoGame\\\\src\\\\components\\\\CanvasScene.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasScene = () => {\n  _s();\n  const mountRef = useRef(null);\n  const charactersRef = useRef([]); // Referência para os personagens\n\n  useEffect(() => {\n    // 1. Inicialização básica da cena\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x87ceeb);\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(20, 20, 20);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.shadowMap.enabled = true;\n    mountRef.current.appendChild(renderer.domElement);\n\n    // 2. Criar chão\n    const floorSize = 50;\n    const floor = new THREE.Mesh(new THREE.PlaneGeometry(floorSize, floorSize), new THREE.MeshStandardMaterial({\n      color: 0x2ecc71\n    }));\n    floor.rotation.x = -Math.PI / 2;\n    floor.receiveShadow = true;\n    scene.add(floor);\n\n    // 3. Iluminação\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.6);\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n    directionalLight.position.set(10, 20, 10);\n    directionalLight.castShadow = true;\n    scene.add(directionalLight);\n\n    // 4. Controles da câmera\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n\n    // 5. Grid helper\n    scene.add(new THREE.GridHelper(floorSize, 20));\n\n    // 6. Carregar personagens FBX\n    const loader = new FBXLoader();\n    const characterPaths = ['/assets/models/characters/archer.fbx', '/assets/models/characters/warrior.fbx', '/assets/models/characters/wizard.fbx'];\n\n    // Posições dos personagens (um do lado do outro)\n    const positions = [{\n      x: -10,\n      z: 0\n    },\n    // Archer à esquerda\n    {\n      x: 0,\n      z: 0\n    },\n    // Warrior no centro\n    {\n      x: 10,\n      z: 0\n    } // Wizard à direita\n    ];\n    let loadedCount = 0;\n    characterPaths.forEach((path, index) => {\n      loader.load(path, fbx => {\n        // Configuração do modelo\n        fbx.traverse(child => {\n          if (child.isMesh) {\n            child.castShadow = true;\n            child.receiveShadow = true;\n          }\n        });\n\n        // Ajustar escala e posição\n        fbx.scale.set(0.1, 0.1, 0.1); // Ajuste conforme necessário\n        fbx.position.set(positions[index].x, 0, positions[index].z);\n\n        // Rotacionar para ficar de frente para a câmera inicial\n        fbx.rotation.y = Math.PI;\n        scene.add(fbx);\n        charactersRef.current.push(fbx);\n        loadedCount++;\n        if (loadedCount === characterPaths.length) {\n          // Todos os personagens carregados\n          camera.lookAt(0, 0, 0);\n        }\n      }, undefined, error => {\n        console.error(`Error loading ${path}:`, error);\n      });\n    });\n\n    // 7. Handle resize\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // 8. Animation loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n    return () => {\n      var _mountRef$current;\n      window.removeEventListener('resize', handleResize);\n      (_mountRef$current = mountRef.current) === null || _mountRef$current === void 0 ? void 0 : _mountRef$current.removeChild(renderer.domElement);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      width: '100vw',\n      height: '100vh',\n      position: 'fixed',\n      top: 0,\n      left: 0\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(CanvasScene, \"SaiTVscznJfVv5iU2UPoLhjKcXs=\");\n_c = CanvasScene;\nexport default CanvasScene;\nvar _c;\n$RefreshReg$(_c, \"CanvasScene\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","OrbitControls","FBXLoader","jsxDEV","_jsxDEV","CanvasScene","_s","mountRef","charactersRef","scene","Scene","background","Color","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","renderer","WebGLRenderer","antialias","setSize","shadowMap","enabled","current","appendChild","domElement","floorSize","floor","Mesh","PlaneGeometry","MeshStandardMaterial","color","rotation","x","Math","PI","receiveShadow","add","ambientLight","AmbientLight","directionalLight","DirectionalLight","castShadow","controls","enableDamping","GridHelper","loader","characterPaths","positions","z","loadedCount","forEach","path","index","load","fbx","traverse","child","isMesh","scale","y","push","length","lookAt","undefined","error","console","handleResize","aspect","updateProjectionMatrix","addEventListener","animate","requestAnimationFrame","update","render","_mountRef$current","removeEventListener","removeChild","ref","style","width","height","top","left","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["M:/DemoGame/src/components/CanvasScene.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader';\r\n\r\nconst CanvasScene = () => {\r\n  const mountRef = useRef(null);\r\n  const charactersRef = useRef([]); // Referência para os personagens\r\n\r\n  useEffect(() => {\r\n    // 1. Inicialização básica da cena\r\n    const scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0x87ceeb);\r\n\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      window.innerWidth / window.innerHeight,\r\n      0.1,\r\n      1000\r\n    );\r\n    camera.position.set(20, 20, 20);\r\n\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.shadowMap.enabled = true;\r\n    mountRef.current.appendChild(renderer.domElement);\r\n\r\n    // 2. Criar chão\r\n    const floorSize = 50;\r\n    const floor = new THREE.Mesh(\r\n      new THREE.PlaneGeometry(floorSize, floorSize),\r\n      new THREE.MeshStandardMaterial({ color: 0x2ecc71 })\r\n    );\r\n    floor.rotation.x = -Math.PI / 2;\r\n    floor.receiveShadow = true;\r\n    scene.add(floor);\r\n\r\n    // 3. Iluminação\r\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.6);\r\n    scene.add(ambientLight);\r\n\r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\r\n    directionalLight.position.set(10, 20, 10);\r\n    directionalLight.castShadow = true;\r\n    scene.add(directionalLight);\r\n\r\n    // 4. Controles da câmera\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.enableDamping = true;\r\n\r\n    // 5. Grid helper\r\n    scene.add(new THREE.GridHelper(floorSize, 20));\r\n\r\n    // 6. Carregar personagens FBX\r\n    const loader = new FBXLoader();\r\n    const characterPaths = [\r\n      '/assets/models/characters/archer.fbx',\r\n      '/assets/models/characters/warrior.fbx',\r\n      '/assets/models/characters/wizard.fbx'\r\n    ];\r\n\r\n    // Posições dos personagens (um do lado do outro)\r\n    const positions = [\r\n      { x: -10, z: 0 }, // Archer à esquerda\r\n      { x: 0, z: 0 },   // Warrior no centro\r\n      { x: 10, z: 0 }    // Wizard à direita\r\n    ];\r\n\r\n    let loadedCount = 0;\r\n\r\n    characterPaths.forEach((path, index) => {\r\n      loader.load(\r\n        path,\r\n        (fbx) => {\r\n          // Configuração do modelo\r\n          fbx.traverse(child => {\r\n            if (child.isMesh) {\r\n              child.castShadow = true;\r\n              child.receiveShadow = true;\r\n            }\r\n          });\r\n\r\n          // Ajustar escala e posição\r\n          fbx.scale.set(0.1, 0.1, 0.1); // Ajuste conforme necessário\r\n          fbx.position.set(positions[index].x, 0, positions[index].z);\r\n\r\n          // Rotacionar para ficar de frente para a câmera inicial\r\n          fbx.rotation.y = Math.PI;\r\n\r\n          scene.add(fbx);\r\n          charactersRef.current.push(fbx);\r\n\r\n          loadedCount++;\r\n          if (loadedCount === characterPaths.length) {\r\n            // Todos os personagens carregados\r\n            camera.lookAt(0, 0, 0);\r\n          }\r\n        },\r\n        undefined,\r\n        (error) => {\r\n          console.error(`Error loading ${path}:`, error);\r\n        }\r\n      );\r\n    });\r\n\r\n    // 7. Handle resize\r\n    const handleResize = () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // 8. Animation loop\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      controls.update();\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      mountRef.current?.removeChild(renderer.domElement);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      ref={mountRef}\r\n      style={{\r\n        width: '100vw',\r\n        height: '100vh',\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CanvasScene;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}