{"ast":null,"code":"var _jsxFileName = \"M:\\\\DemoGame\\\\src\\\\components\\\\CanvasScene.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasScene = () => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    // Scene setup\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x87ceeb); // Sky blue background\n\n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 5, 10);\n\n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.shadowMap.enabled = true;\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Floor plane\n    const floorGeometry = new THREE.PlaneGeometry(20, 20);\n    const floorMaterial = new THREE.MeshStandardMaterial({\n      color: 0x808080,\n      roughness: 0.8,\n      metalness: 0.2\n    });\n    const floor = new THREE.Mesh(floorGeometry, floorMaterial);\n    floor.rotation.x = -Math.PI / 2; // Rotate to be horizontal\n    floor.receiveShadow = true;\n    scene.add(floor);\n\n    // Lighting\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(5, 5, 5);\n    directionalLight.castShadow = true;\n    scene.add(directionalLight);\n\n    // Load character model\n    const loader = new OBJLoader();\n    loader.load('/assets/models/characters/raku_obj.obj', object => {\n      // Center the model\n      const box = new THREE.Box3().setFromObject(object);\n      const center = box.getCenter(new THREE.Vector3());\n      object.position.sub(center);\n\n      // Scale the model if needed\n      const size = box.getSize(new THREE.Vector3());\n      const maxDim = Math.max(size.x, size.y, size.z);\n      const scale = 2 / maxDim; // Adjust this value to change the model size\n      object.scale.multiplyScalar(scale);\n\n      // Position the model on the floor\n      object.position.y = 0;\n\n      // Enable shadows\n      object.traverse(child => {\n        if (child instanceof THREE.Mesh) {\n          child.castShadow = true;\n          child.receiveShadow = true;\n        }\n      });\n      scene.add(object);\n    }, xhr => {\n      console.log(xhr.loaded / xhr.total * 100 + '% loaded');\n    }, error => {\n      console.error('An error happened while loading the model:', error);\n    });\n\n    // Controls\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n\n    // Handle window resize\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Animation loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      mountRef.current.removeChild(renderer.domElement);\n      scene.clear();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 10\n  }, this);\n};\n_s(CanvasScene, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = CanvasScene;\nexport default CanvasScene;\nvar _c;\n$RefreshReg$(_c, \"CanvasScene\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","OrbitControls","OBJLoader","jsxDEV","_jsxDEV","CanvasScene","_s","mountRef","scene","Scene","background","Color","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","renderer","WebGLRenderer","antialias","setSize","shadowMap","enabled","current","appendChild","domElement","floorGeometry","PlaneGeometry","floorMaterial","MeshStandardMaterial","color","roughness","metalness","floor","Mesh","rotation","x","Math","PI","receiveShadow","add","ambientLight","AmbientLight","directionalLight","DirectionalLight","castShadow","loader","load","object","box","Box3","setFromObject","center","getCenter","Vector3","sub","size","getSize","maxDim","max","y","z","scale","multiplyScalar","traverse","child","xhr","console","log","loaded","total","error","controls","enableDamping","dampingFactor","handleResize","aspect","updateProjectionMatrix","addEventListener","animate","requestAnimationFrame","update","render","removeEventListener","removeChild","clear","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["M:/DemoGame/src/components/CanvasScene.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\r\n\r\nconst CanvasScene = () => {\r\n  const mountRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Scene setup\r\n    const scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0x87ceeb); // Sky blue background\r\n\r\n    // Camera setup\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      window.innerWidth / window.innerHeight,\r\n      0.1,\r\n      1000\r\n    );\r\n    camera.position.set(0, 5, 10);\r\n\r\n    // Renderer setup\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.shadowMap.enabled = true;\r\n    mountRef.current.appendChild(renderer.domElement);\r\n\r\n    // Floor plane\r\n    const floorGeometry = new THREE.PlaneGeometry(20, 20);\r\n    const floorMaterial = new THREE.MeshStandardMaterial({ \r\n      color: 0x808080,\r\n      roughness: 0.8,\r\n      metalness: 0.2\r\n    });\r\n    const floor = new THREE.Mesh(floorGeometry, floorMaterial);\r\n    floor.rotation.x = -Math.PI / 2; // Rotate to be horizontal\r\n    floor.receiveShadow = true;\r\n    scene.add(floor);\r\n\r\n    // Lighting\r\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\r\n    scene.add(ambientLight);\r\n\r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\r\n    directionalLight.position.set(5, 5, 5);\r\n    directionalLight.castShadow = true;\r\n    scene.add(directionalLight);\r\n\r\n    // Load character model\r\n    const loader = new OBJLoader();\r\n    loader.load(\r\n      '/assets/models/characters/raku_obj.obj',\r\n      (object) => {\r\n        // Center the model\r\n        const box = new THREE.Box3().setFromObject(object);\r\n        const center = box.getCenter(new THREE.Vector3());\r\n        object.position.sub(center);\r\n\r\n        // Scale the model if needed\r\n        const size = box.getSize(new THREE.Vector3());\r\n        const maxDim = Math.max(size.x, size.y, size.z);\r\n        const scale = 2 / maxDim; // Adjust this value to change the model size\r\n        object.scale.multiplyScalar(scale);\r\n\r\n        // Position the model on the floor\r\n        object.position.y = 0;\r\n\r\n        // Enable shadows\r\n        object.traverse((child) => {\r\n          if (child instanceof THREE.Mesh) {\r\n            child.castShadow = true;\r\n            child.receiveShadow = true;\r\n          }\r\n        });\r\n\r\n        scene.add(object);\r\n      },\r\n      (xhr) => {\r\n        console.log((xhr.loaded / xhr.total * 100) + '% loaded');\r\n      },\r\n      (error) => {\r\n        console.error('An error happened while loading the model:', error);\r\n      }\r\n    );\r\n\r\n    // Controls\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.enableDamping = true;\r\n    controls.dampingFactor = 0.05;\r\n\r\n    // Handle window resize\r\n    const handleResize = () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Animation loop\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      controls.update();\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n\r\n    // Cleanup\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      mountRef.current.removeChild(renderer.domElement);\r\n      scene.clear();\r\n    };\r\n  }, []);\r\n\r\n  return <div ref={mountRef} />;\r\n};\r\n\r\nexport default CanvasScene; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}