{"ast":null,"code":"var _jsxFileName = \"M:\\\\DemoGame\\\\src\\\\components\\\\CanvasScene.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasScene = () => {\n  _s();\n  const mountRef = useRef(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const characterRef = useRef(null);\n  const sceneRef = useRef(new THREE.Scene());\n  const cameraRef = useRef(null);\n  const controlsRef = useRef(null);\n  const rendererRef = useRef(null);\n\n  // Function to focus camera on character\n  const focusOnCharacter = () => {\n    if (!characterRef.current || !cameraRef.current || !controlsRef.current) return;\n    const box = new THREE.Box3().setFromObject(characterRef.current);\n    const center = box.getCenter(new THREE.Vector3());\n    const size = box.getSize(new THREE.Vector3());\n    const maxDim = Math.max(size.x, size.y, size.z);\n    const distance = maxDim * 3;\n    cameraRef.current.position.set(center.x + distance, center.y + distance * 0.5, center.z + distance);\n    cameraRef.current.lookAt(center);\n    controlsRef.current.target.copy(center);\n  };\n\n  // Function to focus camera on floor\n  const focusOnFloor = () => {\n    if (!cameraRef.current || !controlsRef.current) return;\n    cameraRef.current.position.set(20, 20, 20);\n    cameraRef.current.lookAt(0, 0, 0);\n    controlsRef.current.target.set(0, 0, 0);\n  };\n  useEffect(() => {\n    // Verificar se jÃ¡ foi inicializado\n    if (rendererRef.current) return;\n    console.log('Initializing scene...');\n\n    // Scene setup\n    const scene = sceneRef.current;\n    scene.background = new THREE.Color(0x87ceeb);\n\n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    cameraRef.current = camera;\n    camera.position.set(20, 20, 20);\n    camera.lookAt(0, 0, 0);\n\n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    rendererRef.current = renderer;\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Create green floor\n    const floorSize = 30;\n    const floorGeometry = new THREE.PlaneGeometry(floorSize, floorSize);\n    const floorMaterial = new THREE.MeshStandardMaterial({\n      color: 0x2ecc71,\n      roughness: 0.8,\n      metalness: 0.2\n    });\n    const floor = new THREE.Mesh(floorGeometry, floorMaterial);\n    floor.rotation.x = -Math.PI / 2;\n    floor.receiveShadow = true;\n    scene.add(floor);\n\n    // Add helpers\n    scene.add(new THREE.GridHelper(floorSize, 30, 0x000000, 0x000000));\n    scene.add(new THREE.AxesHelper(5));\n\n    // Lighting setup\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.6);\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n    directionalLight.position.set(10, 20, 10);\n    directionalLight.castShadow = true;\n    directionalLight.shadow.mapSize.width = 2048;\n    directionalLight.shadow.mapSize.height = 2048;\n    scene.add(directionalLight);\n\n    // Camera controls\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controlsRef.current = controls;\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.screenSpacePanning = true;\n    controls.minDistance = 5;\n    controls.maxDistance = 50;\n    controls.maxPolarAngle = Math.PI / 2;\n    controls.enablePan = true;\n    controls.enableZoom = true;\n    controls.rotateSpeed = 1.0;\n    controls.zoomSpeed = 1.0;\n    controls.panSpeed = 1.0;\n\n    // Load character model\n    const loader = new OBJLoader();\n    loader.load('/assets/models/characters/raku_obj.obj', object => {\n      characterRef.current = object;\n\n      // Center and scale the model\n      const box = new THREE.Box3().setFromObject(object);\n      const center = box.getCenter(new THREE.Vector3());\n      object.position.sub(center);\n      const size = box.getSize(new THREE.Vector3());\n      const maxDim = Math.max(size.x, size.y, size.z);\n      const scale = 8 / maxDim;\n      object.scale.multiplyScalar(scale);\n      object.position.set(-floorSize / 2 + 2, 0, -floorSize / 2 + 2);\n      object.traverse(child => {\n        if (child instanceof THREE.Mesh) {\n          child.castShadow = true;\n          child.receiveShadow = true;\n          child.material = new THREE.MeshStandardMaterial({\n            color: 0xff0000,\n            roughness: 0.5,\n            metalness: 0.5\n          });\n        }\n      });\n      scene.add(object);\n      setLoading(false);\n      focusOnCharacter();\n    }, xhr => {\n      console.log(xhr.loaded / xhr.total * 100 + '% loaded');\n    }, error => {\n      console.error('Error loading model:', error);\n      setError('Failed to load character model');\n      setLoading(false);\n    });\n\n    // Handle window resize\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Animation loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Cleanup function\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (mountRef.current && renderer.domElement) {\n        mountRef.current.removeChild(renderer.domElement);\n      }\n      renderer.dispose();\n      if (controlsRef.current) {\n        controlsRef.current.dispose();\n      }\n      scene.clear();\n      rendererRef.current = null;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100vw',\n      height: '100vh',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        color: 'white',\n        fontSize: '20px',\n        textShadow: '2px 2px 4px rgba(0,0,0,0.5)'\n      },\n      children: error || 'Loading Character...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        bottom: '20px',\n        right: '20px',\n        display: 'flex',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: focusOnFloor,\n        style: buttonStyle,\n        children: \"Focus on Floor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: focusOnCharacter,\n        style: buttonStyle,\n        children: \"Focus on Character\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n_s(CanvasScene, \"nVgKKZnhZ5nuJP5hMr1j7nlm/Eo=\");\n_c = CanvasScene;\nconst buttonStyle = {\n  padding: '10px 20px',\n  backgroundColor: 'rgba(255, 255, 255, 0.8)',\n  border: 'none',\n  borderRadius: '5px',\n  cursor: 'pointer',\n  zIndex: 1000\n};\nexport default CanvasScene;\nvar _c;\n$RefreshReg$(_c, \"CanvasScene\");","map":{"version":3,"names":["React","useEffect","useRef","useState","THREE","OrbitControls","OBJLoader","jsxDEV","_jsxDEV","CanvasScene","_s","mountRef","loading","setLoading","error","setError","characterRef","sceneRef","Scene","cameraRef","controlsRef","rendererRef","focusOnCharacter","current","box","Box3","setFromObject","center","getCenter","Vector3","size","getSize","maxDim","Math","max","x","y","z","distance","position","set","lookAt","target","copy","focusOnFloor","console","log","scene","background","Color","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","antialias","setSize","shadowMap","enabled","type","PCFSoftShadowMap","appendChild","domElement","floorSize","floorGeometry","PlaneGeometry","floorMaterial","MeshStandardMaterial","color","roughness","metalness","floor","Mesh","rotation","PI","receiveShadow","add","GridHelper","AxesHelper","ambientLight","AmbientLight","directionalLight","DirectionalLight","castShadow","shadow","mapSize","width","height","controls","enableDamping","dampingFactor","screenSpacePanning","minDistance","maxDistance","maxPolarAngle","enablePan","enableZoom","rotateSpeed","zoomSpeed","panSpeed","loader","load","object","sub","scale","multiplyScalar","traverse","child","material","xhr","loaded","total","handleResize","aspect","updateProjectionMatrix","addEventListener","animate","requestAnimationFrame","update","render","removeEventListener","removeChild","dispose","clear","style","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","top","left","transform","fontSize","textShadow","bottom","right","display","gap","onClick","buttonStyle","_c","padding","backgroundColor","border","borderRadius","cursor","zIndex","$RefreshReg$"],"sources":["M:/DemoGame/src/components/CanvasScene.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\r\n\r\nconst CanvasScene = () => {\r\n  const mountRef = useRef(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const characterRef = useRef(null);\r\n  const sceneRef = useRef(new THREE.Scene());\r\n  const cameraRef = useRef(null);\r\n  const controlsRef = useRef(null);\r\n  const rendererRef = useRef(null);\r\n\r\n  // Function to focus camera on character\r\n  const focusOnCharacter = () => {\r\n    if (!characterRef.current || !cameraRef.current || !controlsRef.current) return;\r\n\r\n    const box = new THREE.Box3().setFromObject(characterRef.current);\r\n    const center = box.getCenter(new THREE.Vector3());\r\n    const size = box.getSize(new THREE.Vector3());\r\n    const maxDim = Math.max(size.x, size.y, size.z);\r\n\r\n    const distance = maxDim * 3;\r\n    cameraRef.current.position.set(\r\n      center.x + distance,\r\n      center.y + distance * 0.5,\r\n      center.z + distance\r\n    );\r\n    cameraRef.current.lookAt(center);\r\n    controlsRef.current.target.copy(center);\r\n  };\r\n\r\n  // Function to focus camera on floor\r\n  const focusOnFloor = () => {\r\n    if (!cameraRef.current || !controlsRef.current) return;\r\n\r\n    cameraRef.current.position.set(20, 20, 20);\r\n    cameraRef.current.lookAt(0, 0, 0);\r\n    controlsRef.current.target.set(0, 0, 0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Verificar se jÃ¡ foi inicializado\r\n    if (rendererRef.current) return;\r\n\r\n    console.log('Initializing scene...');\r\n\r\n    // Scene setup\r\n    const scene = sceneRef.current;\r\n    scene.background = new THREE.Color(0x87ceeb);\r\n\r\n    // Camera setup\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      window.innerWidth / window.innerHeight,\r\n      0.1,\r\n      1000\r\n    );\r\n    cameraRef.current = camera;\r\n    camera.position.set(20, 20, 20);\r\n    camera.lookAt(0, 0, 0);\r\n\r\n    // Renderer setup\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    rendererRef.current = renderer;\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.shadowMap.enabled = true;\r\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n    mountRef.current.appendChild(renderer.domElement);\r\n\r\n    // Create green floor\r\n    const floorSize = 30;\r\n    const floorGeometry = new THREE.PlaneGeometry(floorSize, floorSize);\r\n    const floorMaterial = new THREE.MeshStandardMaterial({\r\n      color: 0x2ecc71,\r\n      roughness: 0.8,\r\n      metalness: 0.2\r\n    });\r\n    const floor = new THREE.Mesh(floorGeometry, floorMaterial);\r\n    floor.rotation.x = -Math.PI / 2;\r\n    floor.receiveShadow = true;\r\n    scene.add(floor);\r\n\r\n    // Add helpers\r\n    scene.add(new THREE.GridHelper(floorSize, 30, 0x000000, 0x000000));\r\n    scene.add(new THREE.AxesHelper(5));\r\n\r\n    // Lighting setup\r\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.6);\r\n    scene.add(ambientLight);\r\n\r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\r\n    directionalLight.position.set(10, 20, 10);\r\n    directionalLight.castShadow = true;\r\n    directionalLight.shadow.mapSize.width = 2048;\r\n    directionalLight.shadow.mapSize.height = 2048;\r\n    scene.add(directionalLight);\r\n\r\n    // Camera controls\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controlsRef.current = controls;\r\n    controls.enableDamping = true;\r\n    controls.dampingFactor = 0.05;\r\n    controls.screenSpacePanning = true;\r\n    controls.minDistance = 5;\r\n    controls.maxDistance = 50;\r\n    controls.maxPolarAngle = Math.PI / 2;\r\n    controls.enablePan = true;\r\n    controls.enableZoom = true;\r\n    controls.rotateSpeed = 1.0;\r\n    controls.zoomSpeed = 1.0;\r\n    controls.panSpeed = 1.0;\r\n\r\n    // Load character model\r\n    const loader = new OBJLoader();\r\n    loader.load(\r\n      '/assets/models/characters/raku_obj.obj',\r\n      (object) => {\r\n        characterRef.current = object;\r\n\r\n        // Center and scale the model\r\n        const box = new THREE.Box3().setFromObject(object);\r\n        const center = box.getCenter(new THREE.Vector3());\r\n        object.position.sub(center);\r\n\r\n        const size = box.getSize(new THREE.Vector3());\r\n        const maxDim = Math.max(size.x, size.y, size.z);\r\n        const scale = 8 / maxDim;\r\n        object.scale.multiplyScalar(scale);\r\n\r\n        object.position.set(-floorSize / 2 + 2, 0, -floorSize / 2 + 2);\r\n\r\n        object.traverse((child) => {\r\n          if (child instanceof THREE.Mesh) {\r\n            child.castShadow = true;\r\n            child.receiveShadow = true;\r\n            child.material = new THREE.MeshStandardMaterial({\r\n              color: 0xff0000,\r\n              roughness: 0.5,\r\n              metalness: 0.5\r\n            });\r\n          }\r\n        });\r\n\r\n        scene.add(object);\r\n        setLoading(false);\r\n        focusOnCharacter();\r\n      },\r\n      (xhr) => {\r\n        console.log((xhr.loaded / xhr.total * 100) + '% loaded');\r\n      },\r\n      (error) => {\r\n        console.error('Error loading model:', error);\r\n        setError('Failed to load character model');\r\n        setLoading(false);\r\n      }\r\n    );\r\n\r\n    // Handle window resize\r\n    const handleResize = () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Animation loop\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      controls.update();\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      if (mountRef.current && renderer.domElement) {\r\n        mountRef.current.removeChild(renderer.domElement);\r\n      }\r\n      renderer.dispose();\r\n      if (controlsRef.current) {\r\n        controlsRef.current.dispose();\r\n      }\r\n      scene.clear();\r\n      rendererRef.current = null;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ width: '100vw', height: '100vh', position: 'relative' }}>\r\n      <div ref={mountRef} style={{ width: '100%', height: '100%' }} />\r\n\r\n      {loading && (\r\n        <div style={{\r\n          position: 'absolute',\r\n          top: '50%',\r\n          left: '50%',\r\n          transform: 'translate(-50%, -50%)',\r\n          color: 'white',\r\n          fontSize: '20px',\r\n          textShadow: '2px 2px 4px rgba(0,0,0,0.5)'\r\n        }}>\r\n          {error || 'Loading Character...'}\r\n        </div>\r\n      )}\r\n\r\n      <div style={{\r\n        position: 'absolute',\r\n        bottom: '20px',\r\n        right: '20px',\r\n        display: 'flex',\r\n        gap: '10px'\r\n      }}>\r\n        <button onClick={focusOnFloor} style={buttonStyle}>\r\n          Focus on Floor\r\n        </button>\r\n        <button onClick={focusOnCharacter} style={buttonStyle}>\r\n          Focus on Character\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst buttonStyle = {\r\n  padding: '10px 20px',\r\n  backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n  border: 'none',\r\n  borderRadius: '5px',\r\n  cursor: 'pointer',\r\n  zIndex: 1000\r\n};\r\n\r\nexport default CanvasScene;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}