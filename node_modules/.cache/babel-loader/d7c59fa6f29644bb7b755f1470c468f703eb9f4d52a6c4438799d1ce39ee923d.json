{"ast":null,"code":"var _jsxFileName = \"M:\\\\DemoGame\\\\src\\\\components\\\\CanvasScene.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasScene = () => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    // 1. Inicializar cena, câmera e renderizador\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x87ceeb); // Céu azul\n\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(20, 20, 20);\n    camera.lookAt(0, 0, 0);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // 2. Criar chão verde\n    const floorSize = 50; // Tamanho maior para demo\n    const floorGeometry = new THREE.PlaneGeometry(floorSize, floorSize);\n    const floorMaterial = new THREE.MeshStandardMaterial({\n      color: 0x2ecc71,\n      // Verde\n      roughness: 0.8,\n      metalness: 0.2\n    });\n    const floor = new THREE.Mesh(floorGeometry, floorMaterial);\n    floor.rotation.x = -Math.PI / 2; // Rotacionar para ficar horizontal\n    floor.receiveShadow = true;\n    scene.add(floor);\n\n    // 3. Adicionar iluminação básica\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.6);\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n    directionalLight.position.set(10, 20, 10);\n    scene.add(directionalLight);\n\n    // 4. Adicionar controles de órbita\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.minDistance = 5;\n    controls.maxDistance = 100;\n\n    // 5. Adicionar grid helper para referência\n    const gridHelper = new THREE.GridHelper(floorSize, 20, 0x555555, 0x333333);\n    scene.add(gridHelper);\n\n    // 6. Função de redimensionamento\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // 7. Loop de animação\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // 8. Limpeza\n    return () => {\n      var _mountRef$current;\n      window.removeEventListener('resize', handleResize);\n      (_mountRef$current = mountRef.current) === null || _mountRef$current === void 0 ? void 0 : _mountRef$current.removeChild(renderer.domElement);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      width: '100vw',\n      height: '100vh',\n      position: 'fixed',\n      top: 0,\n      left: 0\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(CanvasScene, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = CanvasScene;\nexport default CanvasScene;\nvar _c;\n$RefreshReg$(_c, \"CanvasScene\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","OrbitControls","jsxDEV","_jsxDEV","CanvasScene","_s","mountRef","scene","Scene","background","Color","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","lookAt","renderer","WebGLRenderer","antialias","setSize","current","appendChild","domElement","floorSize","floorGeometry","PlaneGeometry","floorMaterial","MeshStandardMaterial","color","roughness","metalness","floor","Mesh","rotation","x","Math","PI","receiveShadow","add","ambientLight","AmbientLight","directionalLight","DirectionalLight","controls","enableDamping","dampingFactor","minDistance","maxDistance","gridHelper","GridHelper","handleResize","aspect","updateProjectionMatrix","addEventListener","animate","requestAnimationFrame","update","render","_mountRef$current","removeEventListener","removeChild","ref","style","width","height","top","left","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["M:/DemoGame/src/components/CanvasScene.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\n\r\nconst CanvasScene = () => {\r\n  const mountRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // 1. Inicializar cena, câmera e renderizador\r\n    const scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0x87ceeb); // Céu azul\r\n\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      window.innerWidth / window.innerHeight,\r\n      0.1,\r\n      1000\r\n    );\r\n    camera.position.set(20, 20, 20);\r\n    camera.lookAt(0, 0, 0);\r\n\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    mountRef.current.appendChild(renderer.domElement);\r\n\r\n    // 2. Criar chão verde\r\n    const floorSize = 50; // Tamanho maior para demo\r\n    const floorGeometry = new THREE.PlaneGeometry(floorSize, floorSize);\r\n    const floorMaterial = new THREE.MeshStandardMaterial({\r\n      color: 0x2ecc71, // Verde\r\n      roughness: 0.8,\r\n      metalness: 0.2\r\n    });\r\n    const floor = new THREE.Mesh(floorGeometry, floorMaterial);\r\n    floor.rotation.x = -Math.PI / 2; // Rotacionar para ficar horizontal\r\n    floor.receiveShadow = true;\r\n    scene.add(floor);\r\n\r\n    // 3. Adicionar iluminação básica\r\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.6);\r\n    scene.add(ambientLight);\r\n\r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\r\n    directionalLight.position.set(10, 20, 10);\r\n    scene.add(directionalLight);\r\n\r\n    // 4. Adicionar controles de órbita\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.enableDamping = true;\r\n    controls.dampingFactor = 0.05;\r\n    controls.minDistance = 5;\r\n    controls.maxDistance = 100;\r\n\r\n    // 5. Adicionar grid helper para referência\r\n    const gridHelper = new THREE.GridHelper(floorSize, 20, 0x555555, 0x333333);\r\n    scene.add(gridHelper);\r\n\r\n    // 6. Função de redimensionamento\r\n    const handleResize = () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // 7. Loop de animação\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      controls.update();\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n\r\n    // 8. Limpeza\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      mountRef.current?.removeChild(renderer.domElement);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      ref={mountRef}\r\n      style={{\r\n        width: '100vw',\r\n        height: '100vh',\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CanvasScene;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,KAAK,GAAG,IAAIP,KAAK,CAACQ,KAAK,CAAC,CAAC;IAC/BD,KAAK,CAACE,UAAU,GAAG,IAAIT,KAAK,CAACU,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;;IAE9C,MAAMC,MAAM,GAAG,IAAIX,KAAK,CAACY,iBAAiB,CACxC,EAAE,EACFC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EACtC,GAAG,EACH,IACF,CAAC;IACDJ,MAAM,CAACK,QAAQ,CAACC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC/BN,MAAM,CAACO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAEtB,MAAMC,QAAQ,GAAG,IAAInB,KAAK,CAACoB,aAAa,CAAC;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC;IAC7DF,QAAQ,CAACG,OAAO,CAACT,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACvDT,QAAQ,CAACiB,OAAO,CAACC,WAAW,CAACL,QAAQ,CAACM,UAAU,CAAC;;IAEjD;IACA,MAAMC,SAAS,GAAG,EAAE,CAAC,CAAC;IACtB,MAAMC,aAAa,GAAG,IAAI3B,KAAK,CAAC4B,aAAa,CAACF,SAAS,EAAEA,SAAS,CAAC;IACnE,MAAMG,aAAa,GAAG,IAAI7B,KAAK,CAAC8B,oBAAoB,CAAC;MACnDC,KAAK,EAAE,QAAQ;MAAE;MACjBC,SAAS,EAAE,GAAG;MACdC,SAAS,EAAE;IACb,CAAC,CAAC;IACF,MAAMC,KAAK,GAAG,IAAIlC,KAAK,CAACmC,IAAI,CAACR,aAAa,EAAEE,aAAa,CAAC;IAC1DK,KAAK,CAACE,QAAQ,CAACC,CAAC,GAAG,CAACC,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC,CAAC;IACjCL,KAAK,CAACM,aAAa,GAAG,IAAI;IAC1BjC,KAAK,CAACkC,GAAG,CAACP,KAAK,CAAC;;IAEhB;IACA,MAAMQ,YAAY,GAAG,IAAI1C,KAAK,CAAC2C,YAAY,CAAC,QAAQ,EAAE,GAAG,CAAC;IAC1DpC,KAAK,CAACkC,GAAG,CAACC,YAAY,CAAC;IAEvB,MAAME,gBAAgB,GAAG,IAAI5C,KAAK,CAAC6C,gBAAgB,CAAC,QAAQ,EAAE,GAAG,CAAC;IAClED,gBAAgB,CAAC5B,QAAQ,CAACC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACzCV,KAAK,CAACkC,GAAG,CAACG,gBAAgB,CAAC;;IAE3B;IACA,MAAME,QAAQ,GAAG,IAAI7C,aAAa,CAACU,MAAM,EAAEQ,QAAQ,CAACM,UAAU,CAAC;IAC/DqB,QAAQ,CAACC,aAAa,GAAG,IAAI;IAC7BD,QAAQ,CAACE,aAAa,GAAG,IAAI;IAC7BF,QAAQ,CAACG,WAAW,GAAG,CAAC;IACxBH,QAAQ,CAACI,WAAW,GAAG,GAAG;;IAE1B;IACA,MAAMC,UAAU,GAAG,IAAInD,KAAK,CAACoD,UAAU,CAAC1B,SAAS,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,CAAC;IAC1EnB,KAAK,CAACkC,GAAG,CAACU,UAAU,CAAC;;IAErB;IACA,MAAME,YAAY,GAAGA,CAAA,KAAM;MACzB1C,MAAM,CAAC2C,MAAM,GAAGzC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW;MACtDJ,MAAM,CAAC4C,sBAAsB,CAAC,CAAC;MAC/BpC,QAAQ,CAACG,OAAO,CAACT,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACzD,CAAC;IACDF,MAAM,CAAC2C,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;;IAE/C;IACA,MAAMI,OAAO,GAAGA,CAAA,KAAM;MACpBC,qBAAqB,CAACD,OAAO,CAAC;MAC9BX,QAAQ,CAACa,MAAM,CAAC,CAAC;MACjBxC,QAAQ,CAACyC,MAAM,CAACrD,KAAK,EAAEI,MAAM,CAAC;IAChC,CAAC;IACD8C,OAAO,CAAC,CAAC;;IAET;IACA,OAAO,MAAM;MAAA,IAAAI,iBAAA;MACXhD,MAAM,CAACiD,mBAAmB,CAAC,QAAQ,EAAET,YAAY,CAAC;MAClD,CAAAQ,iBAAA,GAAAvD,QAAQ,CAACiB,OAAO,cAAAsC,iBAAA,uBAAhBA,iBAAA,CAAkBE,WAAW,CAAC5C,QAAQ,CAACM,UAAU,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEtB,OAAA;IACE6D,GAAG,EAAE1D,QAAS;IACd2D,KAAK,EAAE;MACLC,KAAK,EAAE,OAAO;MACdC,MAAM,EAAE,OAAO;MACfnD,QAAQ,EAAE,OAAO;MACjBoD,GAAG,EAAE,CAAC;MACNC,IAAI,EAAE;IACR;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAACpE,EAAA,CAxFID,WAAW;AAAAsE,EAAA,GAAXtE,WAAW;AA0FjB,eAAeA,WAAW;AAAC,IAAAsE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}