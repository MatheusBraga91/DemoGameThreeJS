{"ast":null,"code":"var _jsxFileName = \"M:\\\\DemoGame\\\\src\\\\components\\\\CanvasScene.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasScene = () => {\n  _s();\n  const mountRef = useRef(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!mountRef.current) return;\n    try {\n      // Scene setup\n      const scene = new THREE.Scene();\n      scene.background = new THREE.Color(0x87ceeb); // Sky blue background\n\n      // Camera setup\n      const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      // Position camera to better view the scene\n      camera.position.set(10, 10, 10);\n      camera.lookAt(0, 0, 0);\n\n      // Renderer setup\n      const renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      renderer.shadowMap.enabled = true;\n      mountRef.current.appendChild(renderer.domElement);\n\n      // Add grid helper\n      const gridHelper = new THREE.GridHelper(20, 20);\n      scene.add(gridHelper);\n\n      // Add axes helper\n      const axesHelper = new THREE.AxesHelper(5);\n      scene.add(axesHelper);\n\n      // Floor plane\n      const floorGeometry = new THREE.PlaneGeometry(20, 20);\n      const floorMaterial = new THREE.MeshStandardMaterial({\n        color: 0x808080,\n        roughness: 0.8,\n        metalness: 0.2\n      });\n      const floor = new THREE.Mesh(floorGeometry, floorMaterial);\n      floor.rotation.x = -Math.PI / 2; // Rotate to be horizontal\n      floor.receiveShadow = true;\n      scene.add(floor);\n\n      // Lighting\n      const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n      scene.add(ambientLight);\n      const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n      directionalLight.position.set(5, 5, 5);\n      directionalLight.castShadow = true;\n      scene.add(directionalLight);\n\n      // Load character model\n      const loader = new OBJLoader();\n      loader.load('/assets/models/characters/raku_obj.obj', object => {\n        // Center the model\n        const box = new THREE.Box3().setFromObject(object);\n        const center = box.getCenter(new THREE.Vector3());\n        object.position.sub(center);\n\n        // Scale the model if needed\n        const size = box.getSize(new THREE.Vector3());\n        const maxDim = Math.max(size.x, size.y, size.z);\n        const scale = 2 / maxDim; // Adjust this value to change the model size\n        object.scale.multiplyScalar(scale);\n\n        // Position the model on the floor\n        object.position.y = 0;\n\n        // Enable shadows\n        object.traverse(child => {\n          if (child instanceof THREE.Mesh) {\n            child.castShadow = true;\n            child.receiveShadow = true;\n          }\n        });\n        scene.add(object);\n        setLoading(false);\n      }, xhr => {\n        console.log(xhr.loaded / xhr.total * 100 + '% loaded');\n      }, error => {\n        console.error('An error happened while loading the model:', error);\n        setError('Failed to load character model');\n        setLoading(false);\n      });\n\n      // Controls\n      const controls = new OrbitControls(camera, renderer.domElement);\n      controls.enableDamping = true;\n      controls.dampingFactor = 0.05;\n      controls.minDistance = 5;\n      controls.maxDistance = 50;\n      controls.maxPolarAngle = Math.PI / 2; // Prevent going below the floor\n\n      // Handle window resize\n      const handleResize = () => {\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n      };\n      window.addEventListener('resize', handleResize);\n\n      // Animation loop\n      const animate = () => {\n        requestAnimationFrame(animate);\n        controls.update();\n        renderer.render(scene, camera);\n      };\n      animate();\n\n      // Cleanup\n      return () => {\n        window.removeEventListener('resize', handleResize);\n        if (mountRef.current) {\n          mountRef.current.removeChild(renderer.domElement);\n        }\n        scene.clear();\n      };\n    } catch (err) {\n      console.error('Error setting up scene:', err);\n      setError('Failed to initialize 3D scene');\n      setLoading(false);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      width: '100%',\n      height: '100%',\n      position: 'relative'\n    },\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        color: 'white',\n        fontSize: '20px',\n        textShadow: '2px 2px 4px rgba(0,0,0,0.5)'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        color: 'red',\n        fontSize: '20px',\n        textShadow: '2px 2px 4px rgba(0,0,0,0.5)'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(CanvasScene, \"vB2y2c4qODRtcy5lYaDSmcLFMq4=\");\n_c = CanvasScene;\nexport default CanvasScene;\nvar _c;\n$RefreshReg$(_c, \"CanvasScene\");","map":{"version":3,"names":["React","useEffect","useRef","useState","THREE","OrbitControls","OBJLoader","jsxDEV","_jsxDEV","CanvasScene","_s","mountRef","loading","setLoading","error","setError","current","scene","Scene","background","Color","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","lookAt","renderer","WebGLRenderer","antialias","setSize","shadowMap","enabled","appendChild","domElement","gridHelper","GridHelper","add","axesHelper","AxesHelper","floorGeometry","PlaneGeometry","floorMaterial","MeshStandardMaterial","color","roughness","metalness","floor","Mesh","rotation","x","Math","PI","receiveShadow","ambientLight","AmbientLight","directionalLight","DirectionalLight","castShadow","loader","load","object","box","Box3","setFromObject","center","getCenter","Vector3","sub","size","getSize","maxDim","max","y","z","scale","multiplyScalar","traverse","child","xhr","console","log","loaded","total","controls","enableDamping","dampingFactor","minDistance","maxDistance","maxPolarAngle","handleResize","aspect","updateProjectionMatrix","addEventListener","animate","requestAnimationFrame","update","render","removeEventListener","removeChild","clear","err","ref","style","width","height","children","top","left","transform","fontSize","textShadow","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["M:/DemoGame/src/components/CanvasScene.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\r\n\r\nconst CanvasScene = () => {\r\n  const mountRef = useRef(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!mountRef.current) return;\r\n\r\n    try {\r\n      // Scene setup\r\n      const scene = new THREE.Scene();\r\n      scene.background = new THREE.Color(0x87ceeb); // Sky blue background\r\n\r\n      // Camera setup\r\n      const camera = new THREE.PerspectiveCamera(\r\n        75,\r\n        window.innerWidth / window.innerHeight,\r\n        0.1,\r\n        1000\r\n      );\r\n      // Position camera to better view the scene\r\n      camera.position.set(10, 10, 10);\r\n      camera.lookAt(0, 0, 0);\r\n\r\n      // Renderer setup\r\n      const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n      renderer.shadowMap.enabled = true;\r\n      mountRef.current.appendChild(renderer.domElement);\r\n\r\n      // Add grid helper\r\n      const gridHelper = new THREE.GridHelper(20, 20);\r\n      scene.add(gridHelper);\r\n\r\n      // Add axes helper\r\n      const axesHelper = new THREE.AxesHelper(5);\r\n      scene.add(axesHelper);\r\n\r\n      // Floor plane\r\n      const floorGeometry = new THREE.PlaneGeometry(20, 20);\r\n      const floorMaterial = new THREE.MeshStandardMaterial({ \r\n        color: 0x808080,\r\n        roughness: 0.8,\r\n        metalness: 0.2\r\n      });\r\n      const floor = new THREE.Mesh(floorGeometry, floorMaterial);\r\n      floor.rotation.x = -Math.PI / 2; // Rotate to be horizontal\r\n      floor.receiveShadow = true;\r\n      scene.add(floor);\r\n\r\n      // Lighting\r\n      const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\r\n      scene.add(ambientLight);\r\n\r\n      const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\r\n      directionalLight.position.set(5, 5, 5);\r\n      directionalLight.castShadow = true;\r\n      scene.add(directionalLight);\r\n\r\n      // Load character model\r\n      const loader = new OBJLoader();\r\n      loader.load(\r\n        '/assets/models/characters/raku_obj.obj',\r\n        (object) => {\r\n          // Center the model\r\n          const box = new THREE.Box3().setFromObject(object);\r\n          const center = box.getCenter(new THREE.Vector3());\r\n          object.position.sub(center);\r\n\r\n          // Scale the model if needed\r\n          const size = box.getSize(new THREE.Vector3());\r\n          const maxDim = Math.max(size.x, size.y, size.z);\r\n          const scale = 2 / maxDim; // Adjust this value to change the model size\r\n          object.scale.multiplyScalar(scale);\r\n\r\n          // Position the model on the floor\r\n          object.position.y = 0;\r\n\r\n          // Enable shadows\r\n          object.traverse((child) => {\r\n            if (child instanceof THREE.Mesh) {\r\n              child.castShadow = true;\r\n              child.receiveShadow = true;\r\n            }\r\n          });\r\n\r\n          scene.add(object);\r\n          setLoading(false);\r\n        },\r\n        (xhr) => {\r\n          console.log((xhr.loaded / xhr.total * 100) + '% loaded');\r\n        },\r\n        (error) => {\r\n          console.error('An error happened while loading the model:', error);\r\n          setError('Failed to load character model');\r\n          setLoading(false);\r\n        }\r\n      );\r\n\r\n      // Controls\r\n      const controls = new OrbitControls(camera, renderer.domElement);\r\n      controls.enableDamping = true;\r\n      controls.dampingFactor = 0.05;\r\n      controls.minDistance = 5;\r\n      controls.maxDistance = 50;\r\n      controls.maxPolarAngle = Math.PI / 2; // Prevent going below the floor\r\n\r\n      // Handle window resize\r\n      const handleResize = () => {\r\n        camera.aspect = window.innerWidth / window.innerHeight;\r\n        camera.updateProjectionMatrix();\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n      };\r\n      window.addEventListener('resize', handleResize);\r\n\r\n      // Animation loop\r\n      const animate = () => {\r\n        requestAnimationFrame(animate);\r\n        controls.update();\r\n        renderer.render(scene, camera);\r\n      };\r\n      animate();\r\n\r\n      // Cleanup\r\n      return () => {\r\n        window.removeEventListener('resize', handleResize);\r\n        if (mountRef.current) {\r\n          mountRef.current.removeChild(renderer.domElement);\r\n        }\r\n        scene.clear();\r\n      };\r\n    } catch (err) {\r\n      console.error('Error setting up scene:', err);\r\n      setError('Failed to initialize 3D scene');\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div ref={mountRef} style={{ width: '100%', height: '100%', position: 'relative' }}>\r\n      {loading && (\r\n        <div style={{\r\n          position: 'absolute',\r\n          top: '50%',\r\n          left: '50%',\r\n          transform: 'translate(-50%, -50%)',\r\n          color: 'white',\r\n          fontSize: '20px',\r\n          textShadow: '2px 2px 4px rgba(0,0,0,0.5)'\r\n        }}>\r\n          Loading...\r\n        </div>\r\n      )}\r\n      {error && (\r\n        <div style={{\r\n          position: 'absolute',\r\n          top: '50%',\r\n          left: '50%',\r\n          transform: 'translate(-50%, -50%)',\r\n          color: 'red',\r\n          fontSize: '20px',\r\n          textShadow: '2px 2px 4px rgba(0,0,0,0.5)'\r\n        }}>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CanvasScene; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}